{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "servers_testzadatak_name": {
            "defaultValue": "testzadatak",
            "type": "String"
        },
        "sites_WebAplikacija1_name": {
            "defaultValue": "WebAplikacija1",
            "type": "String"
        },
        "sites_WebAplikacija2_name": {
            "defaultValue": "WebAplikacija2",
            "type": "String"
        },
        "sites_WebAplikacija3_name": {
            "defaultValue": "WebAplikacija3",
            "type": "String"
        },
        "sites_WebAplikacija4_name": {
            "defaultValue": "WebAplikacija4",
            "type": "String"
        },
        "serverfarms_ServicePlan_name": {
            "defaultValue": "ServicePlan",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2023-08-01-preview",
            "name": "[parameters('servers_testzadatak_name')]",
            "location": "italynorth",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "CloudSA9aec2ed7",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Disabled",
                "administrators": {
                    "administratorType": "ActiveDirectory",
                    "principalType": "User",
                    "login": "matej.osrecki_gmail.com#EXT#@matejosreckigmail.onmicrosoft.com",
                    "sid": "257acb12-b115-4169-9edb-d6cb6ffb74b4",
                    "tenantId": "1a5335d1-f801-4acf-b2a9-5194c21d5fc8",
                    "azureADOnlyAuthentication": true
                },
                "restrictOutboundNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2023-01-01",
            "name": "[parameters('serverfarms_ServicePlan_name')]",
            "location": "Italy North",
            "tags": {
                "ServicePlan": "ServicePlan1"
            },
            "sku": {
                "name": "B1",
                "tier": "Basic",
                "size": "B1",
                "family": "B",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/administrators",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/ActiveDirectory')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "administratorType": "ActiveDirectory",
                "login": "matej.osrecki_gmail.com#EXT#@matejosreckigmail.onmicrosoft.com",
                "sid": "257acb12-b115-4169-9edb-d6cb6ffb74b4",
                "tenantId": "1a5335d1-f801-4acf-b2a9-5194c21d5fc8"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/Default')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/azureADOnlyAuthentications",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "azureADOnlyAuthentication": true
            }
        },
        {
            "type": "Microsoft.Sql/servers/connectionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/default')]",
            "location": "italynorth",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "connectionType": "Default"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/master/Default')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/devOpsAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/elasticPools",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/Pool1')]",
            "location": "italynorth",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "sku": {
                "name": "GP_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 2
            },
            "kind": "vcore,pool",
            "properties": {
                "maxSizeBytes": 107374182400,
                "minCapacity": -1,
                "perDatabaseSettings": {
                    "minCapacity": 0,
                    "maxCapacity": 2,
                    "autoPauseDelay": -1
                },
                "zoneRedundant": false,
                "licenseType": "LicenseIncluded",
                "maintenanceConfigurationId": "/subscriptions/88c5c968-bbbe-4c8b-a2d1-d2738b9e5e4a/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
                "autoPauseDelay": -1,
                "availabilityZone": "NoPreference"
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged",
                "autoRotationEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/sqlVulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                },
                "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-01-01",
            "name": "[parameters('sites_WebAplikacija1_name')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan_name'))]"
            ],
            "tags": {
                "WebApp": "WebApp1"
            },
            "kind": "app,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "webaplikacija1.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "webaplikacija1.scm.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "PYTHON|3.12",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "6C0EBE0FA47D1DD7C26B7D74A21E03B33F62108B42199083CCC724142C9245D5",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-01-01",
            "name": "[parameters('sites_WebAplikacija2_name')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan_name'))]"
            ],
            "tags": {
                "WebApp": "WebApp2"
            },
            "kind": "app,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "webaplikacija2.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "webaplikacija2.scm.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "PYTHON|3.12",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "6C0EBE0FA47D1DD7C26B7D74A21E03B33F62108B42199083CCC724142C9245D5",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-01-01",
            "name": "[parameters('sites_WebAplikacija3_name')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan_name'))]"
            ],
            "tags": {
                "WebApp": "WebApp3"
            },
            "kind": "app,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "webaplikacija3.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "webaplikacija3.scm.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "PYTHON|3.12",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "6C0EBE0FA47D1DD7C26B7D74A21E03B33F62108B42199083CCC724142C9245D5",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-01-01",
            "name": "[parameters('sites_WebAplikacija4_name')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan_name'))]"
            ],
            "kind": "app,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "webaplikacija4.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "webaplikacija4.scm.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "6C0EBE0FA47D1DD7C26B7D74A21E03B33F62108B42199083CCC724142C9245D5",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija1_name'), '/ftp')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija1_name'))]"
            ],
            "tags": {
                "WebApp": "WebApp1"
            },
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija2_name'), '/ftp')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija2_name'))]"
            ],
            "tags": {
                "WebApp": "WebApp2"
            },
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija3_name'), '/ftp')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija3_name'))]"
            ],
            "tags": {
                "WebApp": "WebApp3"
            },
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija4_name'), '/ftp')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija4_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija1_name'), '/scm')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija1_name'))]"
            ],
            "tags": {
                "WebApp": "WebApp1"
            },
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija2_name'), '/scm')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija2_name'))]"
            ],
            "tags": {
                "WebApp": "WebApp2"
            },
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija3_name'), '/scm')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija3_name'))]"
            ],
            "tags": {
                "WebApp": "WebApp3"
            },
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija4_name'), '/scm')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija4_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija1_name'), '/web')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija1_name'))]"
            ],
            "tags": {
                "WebApp": "WebApp1"
            },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "PYTHON|3.12",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$WebAplikacija1",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija2_name'), '/web')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija2_name'))]"
            ],
            "tags": {
                "WebApp": "WebApp2"
            },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "PYTHON|3.12",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$WebAplikacija2",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija3_name'), '/web')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija3_name'))]"
            ],
            "tags": {
                "WebApp": "WebApp3"
            },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "PYTHON|3.12",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$WebAplikacija3",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija4_name'), '/web')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija4_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$WebAplikacija4",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija1_name'), '/', parameters('sites_WebAplikacija1_name'), '.azurewebsites.net')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija1_name'))]"
            ],
            "properties": {
                "siteName": "WebAplikacija1",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija2_name'), '/', parameters('sites_WebAplikacija2_name'), '.azurewebsites.net')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija2_name'))]"
            ],
            "properties": {
                "siteName": "WebAplikacija2",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija3_name'), '/', parameters('sites_WebAplikacija3_name'), '.azurewebsites.net')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija3_name'))]"
            ],
            "properties": {
                "siteName": "WebAplikacija3",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('sites_WebAplikacija4_name'), '/', parameters('sites_WebAplikacija4_name'), '.azurewebsites.net')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija4_name'))]"
            ],
            "properties": {
                "siteName": "WebAplikacija4",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/snapshots",
            "apiVersion": "2015-08-01",
            "name": "[concat(parameters('sites_WebAplikacija1_name'), '/2024-05-22T13_13_58_8300577')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija1_name'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/snapshots",
            "apiVersion": "2015-08-01",
            "name": "[concat(parameters('sites_WebAplikacija2_name'), '/2024-05-22T13_13_58_8300577')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija2_name'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/snapshots",
            "apiVersion": "2015-08-01",
            "name": "[concat(parameters('sites_WebAplikacija3_name'), '/2024-05-22T13_13_58_8300577')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija3_name'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/snapshots",
            "apiVersion": "2015-08-01",
            "name": "[concat(parameters('sites_WebAplikacija4_name'), '/2024-05-22T13_13_58_8300577')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_WebAplikacija4_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1')]",
            "location": "italynorth",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]",
                "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('servers_testzadatak_name'), 'Pool1')]"
            ],
            "tags": {
                "SQL": "SQL1"
            },
            "sku": {
                "name": "ElasticPool",
                "tier": "GeneralPurpose",
                "capacity": 0
            },
            "kind": "v12.0,user,vcore,pool",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "elasticPoolId": "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('servers_testzadatak_name'), 'Pool1')]",
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "requestedBackupStorageRedundancy": "Local",
                "maintenanceConfigurationId": "/subscriptions/88c5c968-bbbe-4c8b-a2d1-d2738b9e5e4a/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
                "isLedgerOn": false,
                "availabilityZone": "NoPreference"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2')]",
            "location": "italynorth",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]",
                "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('servers_testzadatak_name'), 'Pool1')]"
            ],
            "tags": {
                "SQL": "SQL2"
            },
            "sku": {
                "name": "ElasticPool",
                "tier": "GeneralPurpose",
                "capacity": 0
            },
            "kind": "v12.0,user,vcore,pool",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "elasticPoolId": "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('servers_testzadatak_name'), 'Pool1')]",
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "requestedBackupStorageRedundancy": "Local",
                "maintenanceConfigurationId": "/subscriptions/88c5c968-bbbe-4c8b-a2d1-d2738b9e5e4a/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
                "isLedgerOn": false,
                "availabilityZone": "NoPreference"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3')]",
            "location": "italynorth",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]",
                "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('servers_testzadatak_name'), 'Pool1')]"
            ],
            "tags": {
                "SQL": "SQL3"
            },
            "sku": {
                "name": "ElasticPool",
                "tier": "GeneralPurpose",
                "capacity": 0
            },
            "kind": "v12.0,user,vcore,pool",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "elasticPoolId": "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('servers_testzadatak_name'), 'Pool1')]",
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "requestedBackupStorageRedundancy": "Local",
                "maintenanceConfigurationId": "/subscriptions/88c5c968-bbbe-4c8b-a2d1-d2738b9e5e4a/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
                "isLedgerOn": false,
                "availabilityZone": "NoPreference"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/Default')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/Default')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/Default')]",
            "location": "Italy North",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "weeklyRetention": "PT0S",
                "monthlyRetention": "PT0S",
                "yearlyRetention": "PT0S",
                "weekOfYear": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "weeklyRetention": "PT0S",
                "monthlyRetention": "PT0S",
                "yearlyRetention": "PT0S",
                "weekOfYear": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "weeklyRetention": "PT0S",
                "monthlyRetention": "PT0S",
                "yearlyRetention": "PT0S",
                "weekOfYear": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 7,
                "diffBackupIntervalInHours": 24
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 7,
                "diffBackupIntervalInHours": 24
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 7,
                "diffBackupIntervalInHours": 24
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL1/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL1')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL2/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL2')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2023-08-01-preview",
            "name": "[concat(parameters('servers_testzadatak_name'), '/SQL3/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_testzadatak_name'), 'SQL3')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_testzadatak_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        }
    ]
}